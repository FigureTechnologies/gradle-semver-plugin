{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Semver Gradle Plugin","text":"<p>This Semver Gradle plugin provides a simple approach to adding semantic versioning to your gradle project using git history regardless of git strategies.</p> <p>At a glance, this plugin provides support for the following features:</p> <ul> <li>Stages (<code>rc</code>, <code>beta</code>, <code>stable</code>, <code>snapshot</code>, etc.)</li> <li>Modifiers (<code>auto</code>, <code>patch</code>, <code>minor</code>, <code>major</code>)</li> <li>Branch-based version calculations</li> <li>Overriding the version</li> <li>Setting an alternate initial version</li> <li>Specifying alternate main and development branch names</li> <li>Appending build metadata (format: <code>+&lt;yyyyMMddHHmmss&gt;</code>)</li> <li>Building when<ul> <li>No git repository is present</li> <li>No git tags are present</li> <li>No remote branch is present</li> <li>Merging, rebasing, cherry-picking, bisecting, reverting, or in a detached   head state</li> </ul> </li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>The following can be added to any of the following:</p> <ul> <li><code>settings.gradle.kts</code> (recommended)<ul> <li>This will automatically apply the version to all projects</li> </ul> </li> <li><code>build.gradle.kts</code> (root project)<ul> <li>This will only automatically apply the version to the root project</li> </ul> </li> <li><code>build.gradle.kts</code> (subproject)<ul> <li>This will only automatically apply the version to the subproject</li> </ul> </li> </ul> <p>If the semantic version is targeting the entire project, it\u2019s recommended to add this to the <code>settings.gradle.kts</code> file.</p> <pre><code>plugins {\n    id(\"com.figure.gradle.semver\") version \"&lt;current_version&gt;\"\n}\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":"Important! <p>The most minimal configuration is to not provide any configuration at all. This will use the default settings and will generate a version based on the git history.</p> <p>However, configurations exist to allow for more control over the versioning calculation process.</p> <pre><code>// For older versions of gradle, you may need to import the configuration method\nimport com.figure.gradle.semver.semver\n\n// This is purely for example purposes\nsemver {\n    // Default: `settings.settingsDir`\n    rootProjectDir = settingsDir.parent\n\n    // Default: `0.0.0` (first build will generate `0.0.1`)\n    initialVersion = \"1.0.0\"\n\n    // No \"default\", but the plugin will search in order for:\n    // `main`, `master\n    mainBranch = \"trunk\"\n\n    // No \"default\", but the plugin will search in order for:\n    // `develop`, `devel`, `dev` \n    developmentBranch = \"development\"\n\n    // Default: `never`\n    // Options: `never`, `always`, `locally`\n    appendBuildMetadata = \"locally\"\n}\n</code></pre>"},{"location":"append-build-metadata/","title":"Append Build Metadata","text":"<p>Build metadata is a string of characters in the format: <code>+&lt;yyyyMMddHHmmss&gt;</code></p> <p>To conditionally append build metadata to the next version, use the Gradle property:</p> <p>Via command line:</p> <pre><code>-Psemver.appendBuildMetadata=&lt;appendBuildMetadata&gt;\n</code></pre> <p>In any valid <code>gradle.properties</code>:</p> <pre><code>semver.appendBuildMetadata=&lt;appendBuildMetadata&gt;\n</code></pre> Important <p>If no value is provided, a default of <code>never</code> will be used.</p> <p>The following are the possible values:</p> Modifier Description <code>never</code> Never adds the generated build metadata <code>always</code> Always adds the generated build metadata <code>locally</code> Only adds the generated build metadata when building locally"},{"location":"append-build-metadata/#examples","title":"Examples","text":"<p>Latest tag: <code>v1.0.0</code></p> <p>Current date and time: <code>01-23-2024 12:34</code></p> Command Next Version <code>./gradlew -Psemver.appendBuildMetadata=locally</code> 1.0.1+202401231234 (when not running in CI) <code>./gradlew -Psemver.appendBuildMetadata=always</code> 1.0.1+202401231234 <code>./gradlew -Psemver.appendBuildMetadata=never</code> 1.0.1 <p>Latest tag: <code>v1.0.0-feat.1</code> (and still on this feature branch)</p> <p>Current date and time: <code>01-23-2024 12:34</code></p> Command Next Version <code>./gradlew -Psemver.appendBuildMetadata=locally</code> 1.0.1-feat.2+202401231234 (when not running in CI) <code>./gradlew -Psemver.appendBuildMetadata=always</code> 1.0.0-feat.2+202401231234 <code>./gradlew -Psemver.appendBuildMetadata=never</code> 1.0.0-feat.2"},{"location":"branch-based-version-calculation/","title":"Branch-based Version Calculation","text":"<p>Branch-based version calculation provides a way to automatically generate unique versions based on the current branch. This can be good for local testing and integration testing with other libraries or services for a period of time prior to creating a stable release.</p> Important <p>Every commit gets a new version!</p>"},{"location":"branch-based-version-calculation/#examples","title":"Examples","text":"<p>Branching from the main branch</p> Latest Tag Current Branch Branched From Commits past main Next version <code>v1.0.0</code> <code>me/sc-123/my-feature</code> <code>main</code> 4 1.0.1-me-sc-123-my-feature.4 <code>v1.0.0</code> <code>my-feature</code> <code>main</code> 12 1.0.1-my-feature.12 <code>v1.0.0</code> <code>my-sub-feature</code> <code>my-feature</code> 16 1.0.1-my-sub-feature.16 <code>v1.0.0</code> <code>main</code> - 7 1.0.1 <p>Branching from the development branch</p> Latest Tag Current Branch Branched From Commits past develop Next version <code>v1.0.0</code> <code>me/sc-123/my-feature</code> <code>develop</code> 4 1.0.1-me-sc-123-my-feature.4 <code>v1.0.0</code> <code>my-feature</code> <code>develop</code> 12 1.0.1-my-feature.12 <code>v1.0.0</code> <code>my-sub-feature</code> <code>my-feature</code> 16 1.0.1-my-sub-feature.16 <code>v1.0.0-develop.1</code> <code>develop</code> - 7 1.0.1-develop.8"},{"location":"branch-based-version-calculation/#forcing-a-new-version","title":"Forcing a new version","text":"Tip <p>Need a new version but don\u2019t need to make any changes to your branch? Just create an empty commit!</p> <pre><code>git commit --allow-empty -m \"Empty commit\"\n</code></pre> <p>Alternatively, you can use the <code>semver.appendBuildMetadata</code> property to append build metadata to the version.</p> <p>Via command line:</p> <pre><code>./gradlew -Psemver.appendBuildMetadata=(always|never|locally)\n</code></pre> <p>In any valid <code>gradle.properties</code>:</p> <pre><code>semver.appendBuildMetadata=(always|never|locally)\n</code></pre>"},{"location":"for-major-version/","title":"For Major Version","text":"<p>To target a historical major version line (useful for applying fixes to older major versions), use the Gradle property:</p> <p>Via command line:</p> <pre><code>-Psemver.forMajorVersion=&lt;forMajorVersion&gt;\n</code></pre> <p>In any valid <code>gradle.properties</code>:</p> <pre><code>semver.forMajorVersion=&lt;forMajorVersion&gt;\n</code></pre>"},{"location":"for-major-version/#examples","title":"Examples","text":"<p>Latest tag: <code>v2.0.0</code> Latest v1 tag: <code>v1.5.9</code></p> Important Note <p>If no stage or modifier is provided, a default of <code>auto</code> used.</p> Command Next Version <code>./gradlew -Psemver.forMajorVersion=1</code> 1.5.10 <code>./gradlew -Psemver.forMajorVersion=1 -Psemver.modifier=minor</code> 1.6.0 <code>./gradlew -Psemver.forMajorVersion=1 -Psemver.modifier=minor -Psemver.modifier=rc</code> 1.6.0-rc.1"},{"location":"for-major-version/#suggested-workflow","title":"Suggested Workflow","text":"<ol> <li>Identify and checkout the latest tag for the major version you want to    target.</li> <li>Create a new branch for your changes off the tag (e.g. <code>release/v1.x</code>).</li> <li>Make your changes and commit them to your new branch.</li> <li>Execute gradle build, publish, and release steps with    <code>-Psemver.forMajorVersion=&lt;your-major-version&gt;</code> to target the historical    major version line.</li> </ol>"},{"location":"modifiers-with-stages/","title":"Modifiers with Stages","text":"<p>To alter the next version incrementation and stage, use the Gradle properties together:</p> <p>Via command line:</p> <pre><code>-Psemver.modifier=&lt;modifier&gt; -Psemver.stage=&lt;stage&gt;\n</code></pre> <p>In any valid <code>gradle.properties</code>:</p> <pre><code>semver.modifier=&lt;modifier&gt;\nsemver.stage=&lt;stage&gt;\n</code></pre> <p>Latest tag: <code>v1.0.0-rc.1</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev      -Psemver.modifier=major</code> 2.0.0-dev.1 <code>./gradlew -Psemver.stage=alpha    -Psemver.modifier=major</code> 2.0.0-alpha.1 <code>./gradlew -Psemver.stage=beta     -Psemver.modifier=major</code> 2.0.0-beta.1 <code>./gradlew -Psemver.stage=rc       -Psemver.modifier=major</code> 2.0.0-rc.1 <code>./gradlew -Psemver.stage=snapshot -Psemver.modifier=major</code> 2.0.0-SNAPSHOT <code>./gradlew -Psemver.stage=final    -Psemver.modifier=major</code> 2.0.0-final.1 <code>./gradlew -Psemver.stage=ga       -Psemver.modifier=major</code> 2.0.0-ga.1 <code>./gradlew -Psemver.stage=release  -Psemver.modifier=major</code> 2.0.0-release.1 <code>./gradlew -Psemver.stage=stable   -Psemver.modifier=major</code> 2.0.0 <code>./gradlew -Psemver.stage=auto     -Psemver.modifier=major</code> 2.0.0-rc.1 <p>Latest tag: <code>v1.0.0-rc.1</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev      -Psemver.modifier=minor</code> 1.1.0-dev.1 <code>./gradlew -Psemver.stage=alpha    -Psemver.modifier=minor</code> 1.1.0-alpha.1 <code>./gradlew -Psemver.stage=beta     -Psemver.modifier=minor</code> 1.1.0-beta.1 <code>./gradlew -Psemver.stage=rc       -Psemver.modifier=minor</code> 1.1.0-rc.1 <code>./gradlew -Psemver.stage=snapshot -Psemver.modifier=minor</code> 1.1.0-SNAPSHOT <code>./gradlew -Psemver.stage=final    -Psemver.modifier=minor</code> 1.1.0-final.1 <code>./gradlew -Psemver.stage=ga       -Psemver.modifier=minor</code> 1.1.0-ga.1 <code>./gradlew -Psemver.stage=release  -Psemver.modifier=minor</code> 1.1.0-release.1 <code>./gradlew -Psemver.stage=stable   -Psemver.modifier=minor</code> 1.1.0 <code>./gradlew -Psemver.stage=auto     -Psemver.modifier=minor</code> 1.1.0-rc.1 <p>Latest tag: <code>v1.0.0-rc.1</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev      -Psemver.modifier=patch</code> 1.0.1-dev.1 <code>./gradlew -Psemver.stage=alpha    -Psemver.modifier=patch</code> 1.0.1-alpha.1 <code>./gradlew -Psemver.stage=beta     -Psemver.modifier=patch</code> 1.0.1-beta.1 <code>./gradlew -Psemver.stage=rc       -Psemver.modifier=patch</code> 1.0.1-rc.1 <code>./gradlew -Psemver.stage=snapshot -Psemver.modifier=patch</code> 1.0.1-SNAPSHOT <code>./gradlew -Psemver.stage=final    -Psemver.modifier=patch</code> 1.0.1-final.1 <code>./gradlew -Psemver.stage=ga       -Psemver.modifier=patch</code> 1.0.1-ga.1 <code>./gradlew -Psemver.stage=release  -Psemver.modifier=patch</code> 1.0.1-release.1 <code>./gradlew -Psemver.stage=stable   -Psemver.modifier=patch</code> 1.0.1 <code>./gradlew -Psemver.stage=auto     -Psemver.modifier=patch</code> 1.0.1-rc.1 <p>Latest tag: <code>v1.0.0-rc.1</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev      -Psemver.modifier=auto</code> 1.0.1-dev.1 <code>./gradlew -Psemver.stage=alpha    -Psemver.modifier=auto</code> 1.0.1-alpha.1 <code>./gradlew -Psemver.stage=beta     -Psemver.modifier=auto</code> 1.0.1-beta.1 <code>./gradlew -Psemver.stage=rc       -Psemver.modifier=auto</code> 1.0.0-rc.2 <code>./gradlew -Psemver.stage=snapshot -Psemver.modifier=auto</code> 1.0.1-SNAPSHOT <code>./gradlew -Psemver.stage=final    -Psemver.modifier=auto</code> 1.0.1-final.1 <code>./gradlew -Psemver.stage=ga       -Psemver.modifier=auto</code> 1.0.1-ga.1 <code>./gradlew -Psemver.stage=release  -Psemver.modifier=auto</code> 1.0.1-release.1 <code>./gradlew -Psemver.stage=stable   -Psemver.modifier=auto</code> 1.0.1 <code>./gradlew -Psemver.stage=auto     -Psemver.modifier=auto</code> 1.0.0-rc.2 <p>Latest tag: <code>v1.0.0</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev      -Psemver.modifier=major</code> 2.0.0-dev.1 <code>./gradlew -Psemver.stage=alpha    -Psemver.modifier=major</code> 2.0.0-alpha.1 <code>./gradlew -Psemver.stage=beta     -Psemver.modifier=major</code> 2.0.0-beta.1 <code>./gradlew -Psemver.stage=rc       -Psemver.modifier=major</code> 2.0.0-rc.1 <code>./gradlew -Psemver.stage=snapshot -Psemver.modifier=major</code> 2.0.0-SNAPSHOT <code>./gradlew -Psemver.stage=final    -Psemver.modifier=major</code> 2.0.0-final.1 <code>./gradlew -Psemver.stage=ga       -Psemver.modifier=major</code> 2.0.0-ga.1 <code>./gradlew -Psemver.stage=release  -Psemver.modifier=major</code> 2.0.0-release.1 <code>./gradlew -Psemver.stage=stable   -Psemver.modifier=major</code> 2.0.0 <code>./gradlew -Psemver.stage=auto     -Psemver.modifier=major</code> 2.0.0 <p>Latest tag: <code>v1.0.0</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev      -Psemver.modifier=minor</code> 1.1.0-dev.1 <code>./gradlew -Psemver.stage=alpha    -Psemver.modifier=minor</code> 1.1.0-alpha.1 <code>./gradlew -Psemver.stage=beta     -Psemver.modifier=minor</code> 1.1.0-beta.1 <code>./gradlew -Psemver.stage=rc       -Psemver.modifier=minor</code> 1.1.0-rc.1 <code>./gradlew -Psemver.stage=snapshot -Psemver.modifier=minor</code> 1.1.0-SNAPSHOT <code>./gradlew -Psemver.stage=final    -Psemver.modifier=minor</code> 1.1.0-final.1 <code>./gradlew -Psemver.stage=ga       -Psemver.modifier=minor</code> 1.1.0-ga.1 <code>./gradlew -Psemver.stage=release  -Psemver.modifier=minor</code> 1.1.0-release.1 <code>./gradlew -Psemver.stage=stable   -Psemver.modifier=minor</code> 1.1.0 <code>./gradlew -Psemver.stage=auto     -Psemver.modifier=minor</code> 1.1.0 <p>Latest tag: <code>v1.0.0</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev      -Psemver.modifier=patch</code> 1.0.1-dev.1 <code>./gradlew -Psemver.stage=alpha    -Psemver.modifier=patch</code> 1.0.1-alpha.1 <code>./gradlew -Psemver.stage=beta     -Psemver.modifier=patch</code> 1.0.1-beta.1 <code>./gradlew -Psemver.stage=rc       -Psemver.modifier=patch</code> 1.0.1-rc.1 <code>./gradlew -Psemver.stage=snapshot -Psemver.modifier=patch</code> 1.0.1-SNAPSHOT <code>./gradlew -Psemver.stage=final    -Psemver.modifier=patch</code> 1.0.1-final.1 <code>./gradlew -Psemver.stage=ga       -Psemver.modifier=patch</code> 1.0.1-ga.1 <code>./gradlew -Psemver.stage=release  -Psemver.modifier=patch</code> 1.0.1-release.1 <code>./gradlew -Psemver.stage=stable   -Psemver.modifier=patch</code> 1.0.1 <code>./gradlew -Psemver.stage=auto     -Psemver.modifier=patch</code> 1.0.1 <p>Latest tag: <code>v1.0.0</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev      -Psemver.modifier=auto</code> 1.0.1-dev.1 <code>./gradlew -Psemver.stage=alpha    -Psemver.modifier=auto</code> 1.0.1-alpha.1 <code>./gradlew -Psemver.stage=beta     -Psemver.modifier=auto</code> 1.0.1-beta.1 <code>./gradlew -Psemver.stage=rc       -Psemver.modifier=auto</code> 1.0.0-rc.2 <code>./gradlew -Psemver.stage=snapshot -Psemver.modifier=auto</code> 1.0.1-SNAPSHOT <code>./gradlew -Psemver.stage=final    -Psemver.modifier=auto</code> 1.0.1-final.1 <code>./gradlew -Psemver.stage=ga       -Psemver.modifier=auto</code> 1.0.1-ga.1 <code>./gradlew -Psemver.stage=release  -Psemver.modifier=auto</code> 1.0.1-release.1 <code>./gradlew -Psemver.stage=stable   -Psemver.modifier=auto</code> 1.0.1 <code>./gradlew -Psemver.stage=auto     -Psemver.modifier=auto</code> 1.0.1"},{"location":"modifiers/","title":"Modifiers","text":"<p>To alter the next version incrementation, use the Gradle property: </p> <p>Via command line: <pre><code>-Psemver.modifier=&lt;modifier&gt;\n</code></pre></p> <p>In any valid <code>gradle.properties</code>: <pre><code>semver.modifier=&lt;modifier&gt;\n</code></pre></p> Note <p>If no modifier is provided, a default of <code>auto</code> will be used.</p> <p>The following are the possible values:</p> Modifier Description <code>major</code> Increments the major version number <code>minor</code> Increments the minor version number <code>patch</code> Increments the patch version number <code>auto</code> Increments the patch or the pre-release number if the previous tag was a stage-based pre-release"},{"location":"modifiers/#examples","title":"Examples","text":"Important Note <p>Since no stage is provided in these examples, the default stage of <code>auto</code> used.</p> <p>For how to use with stages, consult the Modifiers with Stages documentation.</p> <p>Latest tag: <code>v1.0.0-rc.1</code></p> Command Next Version <code>./gradlew -Psemver.modifier=major</code> v2.0.0 <code>./gradlew -Psemver.modifier=minor</code> v1.1.0 <code>./gradlew -Psemver.modifier=patch</code> v1.0.1 <code>./gradlew -Psemver.modifier=auto</code> v1.0.0-rc.2 <p>Latest tag: <code>v1.0.0</code></p> Command Next Version <code>./gradlew -Psemver.modifier=major</code> v2.0.0 <code>./gradlew -Psemver.modifier=minor</code> v1.1.0 <code>./gradlew -Psemver.modifier=patch</code> v1.0.1 <code>./gradlew -Psemver.modifier=auto</code> v1.0.1 <p>Latest tags (sorted by latest first) and on main branch:</p> <ul> <li><code>v1.0.1-my-feature.1</code></li> <li><code>v1.0.0</code></li> </ul> Important <p>The latest tag is <code>v1.0.1-my-feature.1</code>, however, this is a special pre-release type that does not affect the calculation of the next version when on a main branch given a modifier.</p> Command Next Version <code>./gradlew -Psemver.modifier=major</code> v2.0.0 <code>./gradlew -Psemver.modifier=minor</code> v1.1.0 <code>./gradlew -Psemver.modifier=patch</code> v1.0.1 <code>./gradlew -Psemver.modifier=auto</code> v1.0.1"},{"location":"override-version/","title":"Override Version","text":"<p>To specify the exact next version, use the Gradle property:</p> <p>Via command line:</p> <pre><code>-Psemver.overrideVersion=&lt;overrideVersion&gt;\n</code></pre> <p>In any valid <code>gradle.properties</code>:</p> <pre><code>semver.overrideVersion=&lt;overrideVersion&gt;\n</code></pre>"},{"location":"override-version/#examples","title":"Examples","text":"<p>Latest tag: <code>v2.0.0</code></p> Command Next Version <code>./gradlew -Psemver.overrideVersion=1.5.9</code> v1.5.9 <p>Latest tag: <code>v2.0.0-rc.1</code></p> Command Next Version <code>./gradlew -Psemver.overrideVersion=1.5.9-my-test-hotfix.1</code> v1.5.9-my-test-hotfix.1"},{"location":"publishing/","title":"Publishing","text":"<p>This plugin is published to the Gradle plugin portal via GitHub Actions. In order for this to publish, there are two important pieces: signing key, and publishing key.</p>"},{"location":"publishing/#signing","title":"Signing","text":"<p>The signing key step is to validate that it is us publishing this artifact. This is done with our <code>69C08EA0</code> GPG key. The following configuration is needed to sign our artifacts:</p> <pre><code>signing.keyId=69C08EA0\nsigning.password=\nsigning.secretKeyRingFile=\n</code></pre>"},{"location":"publishing/#gradle-portal-publish","title":"Gradle Portal Publish","text":"<p>Our artifact ends up living on the Gradle Plugin Portal, or you may know it as <code>gradlePluginPortal()</code>. To upload to this repository we need to give them the API key information for our portal account. The following configuration is needed to authenticate with the Gradle Plugin Portal:</p> <pre><code>gradle.publish.key=\ngradle.publish.secret=\n</code></pre>"},{"location":"quick-start/","title":"Quick Start","text":"<p>This Gradle plugin calculates the next version based on the latest Git tag, using optional parameters and properties.</p> <p>Basic usage:</p> <pre><code>./gradlew build\n</code></pre> <p>With parameters:</p> <pre><code>./gradlew build -Psemver.stage=rc -Psemver.modifier=minor\n</code></pre>"},{"location":"quick-start/#parameters-and-properties","title":"Parameters and Properties","text":"<p>The plugin uses several parameters and properties to calculate the next version. Default values and valid inputs vary. For detailed information on each parameter and property, including usage examples and valid values, please refer to the following documentation pages:</p> <ol> <li>semver.stage</li> <li>semver.modifier</li> <li>semver.overrideVersion</li> <li>semver.forMajorVersion</li> <li>semver.tagPrefix</li> <li>semver.appendBuildMetadata</li> </ol> Important! <p>Each of these can be set as:</p> <ul> <li>Gradle parameters (<code>-P</code> on the command-line)</li> <li>in any valid <code>gradle.properties</code> files, in search order:<ul> <li>in the Gradle user home directory (   typically <code>~/.gradle/gradle.properties</code>)</li> <li>in the Gradle home directory</li> <li>in the project\u2019s directory where the plugin is applied</li> </ul> </li> </ul>"},{"location":"stages/","title":"Stages","text":"<p>To alter the next version stage, use the Gradle property: </p> <p>Via command line: <pre><code>-Psemver.stage=&lt;stage&gt;\n</code></pre></p> <p>In any valid <code>gradle.properties</code>: <pre><code>semver.stage=&lt;stage&gt;\n</code></pre></p> Note <p>If no stage is provided, a default of <code>auto</code> will be used.</p> <p>The following are possible values:</p> Stage Pre-release Label Example Tag Description <code>dev</code> dev <code>v1.0.0-dev.1</code> Development stage <code>alpha</code> alpha <code>v1.0.0-alpha.1</code> Alpha stage <code>beta</code> beta <code>v1.0.0-beta.1</code> Beta stage <code>rc</code> rc <code>v1.0.0-rc.1</code> Release Candidate stage <code>snapshot</code> SNAPSHOT <code>v1.0.0-SNAPSHOT</code> Snapshot stage <code>final</code> final <code>v1.0.0-final.1</code> Final stage <code>ga</code> ga <code>v1.0.0-ga.1</code> General Availability stage <code>release</code> release <code>v1.0.0-release.1</code> Release stage <code>stable</code> (none) <code>v1.0.0</code> Stable stage <code>auto</code> (depends on previous tag) - Based on previous tag"},{"location":"stages/#examples","title":"Examples","text":"Important Note <p>Since no modifier is provided in these examples, the default modifier of <code>auto</code> used.</p> <p>For how to use with modifiers, consult the Modifiers with Stages documentation.</p> <p>Latest tags: <code>v1.0.0-rc.1</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev</code> 1.0.1-dev.1 <code>./gradlew -Psemver.stage=alpha</code> 1.0.1-alpha.1 <code>./gradlew -Psemver.stage=beta</code> 1.0.1-beta.1 <code>./gradlew -Psemver.stage=rc</code> 1.0.0-rc.2 <code>./gradlew -Psemver.stage=snapshot</code> 1.0.1-SNAPSHOT <code>./gradlew -Psemver.stage=final</code> 1.0.1-final.1 <code>./gradlew -Psemver.stage=ga</code> 1.0.1-ga.1 <code>./gradlew -Psemver.stage=release</code> 1.0.1-release.1 <code>./gradlew -Psemver.stage=stable</code> 1.0.0 <code>./gradlew -Psemver.stage=auto</code> 1.0.0-rc.2 <p>Latest tag: <code>v1.0.0</code></p> Command Next Version <code>./gradlew -Psemver.stage=dev</code> 1.0.1-dev.1 <code>./gradlew -Psemver.stage=alpha</code> 1.0.1-alpha.1 <code>./gradlew -Psemver.stage=beta</code> 1.0.1-beta.1 <code>./gradlew -Psemver.stage=rc</code> 1.0.1-rc.1 <code>./gradlew -Psemver.stage=snapshot</code> 1.0.1-SNAPSHOT <code>./gradlew -Psemver.stage=final</code> 1.0.1-final.1 <code>./gradlew -Psemver.stage=ga</code> 1.0.1-ga.1 <code>./gradlew -Psemver.stage=release</code> 1.0.1-release.1 <code>./gradlew -Psemver.stage=stable</code> 1.0.1 <code>./gradlew -Psemver.stage=auto</code> 1.0.1"},{"location":"tag-prefix/","title":"Tag Prefix","text":"<p>To alter the next version tag prefix, use the Gradle property:</p> <p>Via command line:</p> <pre><code>-Psemver.tagPrefix=&lt;tagPrefix&gt;\n</code></pre> <p>In any valid <code>gradle.properties</code>:</p> <pre><code>semver.tagPrefix=&lt;tagPrefix&gt;\n</code></pre> Note <p>If no tag prefix is provided, a default of <code>v</code> will be used.</p>"},{"location":"tag-prefix/#examples","title":"Examples","text":"<p>Latest tag: <code>v1.0.0</code></p> Command Next Version <code>./gradlew -Psemver.tagPrefix=my-prefix</code> my-prefix1.0.1 <code>./gradlew -Psemver.tagPrefix=support-lib-</code> support-lib-1.1.0"}]}